Handling of obsolete configuration files/scripts
------------------------------------------------

As dpkg doesn't remove conffiles that are no longer provided by the current
version of the package, we have to disable them manually so that they don't
create trouble.

Older versions of this package renamed all these files by adding a ".obsolete"
extension. Newer versions only rename those files that were changed. Unchanged
files are simply deleted. If you find such files in
/etc/acpi/{events,suspend.d,resume.d}, you can safely remove them. 

This renaming is required because otherwise they would be actively used
even though they are supposed to have been removed.

You can use the following command to find the files that have been renamed:
$ dpkg -s acpi-support | grep obsolete$

(If you have none, it's not a bug, it's just that you installed acpi-support
after the last removal, or that you purged it to reinstall it properly from
scratch).

The acpi_fakekeyd daemon.
-------------------------

With the kernel only allowing key events for which a real key exists on the
keyboard the old approach of acpi_fakekey to just send the needed event through
an existing keyboard device does not always work. As a workaround acpi_fakekey
now sends the generated key press event through the user level input driver and
thus needs CONFIG_INPUT_UINPUT defined in the kernel and, if built as a module,
the uinput module to be loaded.

The "acpi-support" method for suspending.
-----------------------------------------

Older versions of acpi-support had their own scripts to control suspend and
resume. This has been deprecated for quite some time and finally has been
removed in 0.122-1. The scripts are stil available under
/usr/share/doc/acpi-support/examples and can easily be copied back to their
original location under /etc/acpi. Once the scripts have been installed they can
be configured by editing /etc/default/acpi-support.

To have a custom script executed on suspend, it is recommended to use pm-utils
instead (/usr/lib/pm-utils/sleep.d/). Note that acpi-support is bypassed by
'acpitool -s'; to enable the suspend actions defined through acpi-support, one
must put a laptop to sleep with '/etc/acpi/sleep_suspend.sh sleep'.

If
   (a) you are upgrading from an earlier version of "acpi-support"
   and
   (b) you do not have any custom scripts in /etc/acpi/*.d/
   and
   (c) you have custom set some variables in /etc/default/acpi-support
       to "true"
then
you should be able to use the "pm-utils" method for suspending by using command
line parameters for pm-suspend according to the following table:

 variable                    pm-utils parameter

 SAVE_VBE_STATE              --quirk-vbestate-restore
 POST_VIDEO                  --quirk-vbe-post
 SAVE_VIDEO_PCI_STATE        --quirk-save-pci
 USE_DPMS                    --quirk-dpms-suspend
 RADEON_LIGHT                --quirk-radeon-off

You can set these parameters automatically by adding a file in
/etc/pm/config.d/ containing a  line like
	ADD_PARAMETERS="--quirk-vbestate-restore --quirk-vbe-post"

In addition, if you had a line in /etc/default/acpi-support like
	MODULES="module1 module2"
Then you should add the line
	SUSPEND_MODULES="module1 module2"
to a file in /etc/pm/config.d/

Should you experience problems when switching to pm-utils please report them.

